SET DEFINE OFF;
--
-- APP_USERS  (Table) 
--
CREATE TABLE APP_USERS
(
  APP_USER_ID     NUMBER(10)                    NOT NULL,
  DISPLAY_NAME    VARCHAR2(500 CHAR)            NOT NULL,
  LOGIN_USERNAME  VARCHAR2(100 CHAR)            NOT NULL,
  LOGIN_PASSWORD  VARCHAR2(100 CHAR)            NOT NULL,
  PROXY_USER      VARCHAR2(128 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN APP_USERS.APP_USER_ID IS 'PK'
/

COMMENT ON COLUMN APP_USERS.DISPLAY_NAME IS 'User name (for display purposes)'
/

COMMENT ON COLUMN APP_USERS.LOGIN_USERNAME IS 'User username to log into application'
/

COMMENT ON COLUMN APP_USERS.LOGIN_PASSWORD IS 'User password to log into application'
/

COMMENT ON COLUMN APP_USERS.PROXY_USER IS 'The name of the proxy user, if proxy user is used to identify from database'
/


--
-- APP_USERS_PK  (Index) 
--
CREATE UNIQUE INDEX APP_USERS_PK ON APP_USERS
(APP_USER_ID)
LOGGING
/

ALTER TABLE APP_USERS ADD (
  CONSTRAINT APP_USERS_PK
  PRIMARY KEY
  (APP_USER_ID)
  USING INDEX APP_USERS_PK
  ENABLE VALIDATE)
/


--
-- APP_USER_PROJECTS  (Table) 
--
CREATE TABLE APP_USER_PROJECTS
(
  APP_USER_PROJECT_ID       NUMBER(10)          NOT NULL,
  APP_USER_ID               NUMBER(10)          NOT NULL,
  PROJECT_ID                NUMBER(10)          NOT NULL,
  USER_DATABASE_IDENTIFIER  VARCHAR2(100 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN APP_USER_PROJECTS.APP_USER_PROJECT_ID IS 'PK'
/

COMMENT ON COLUMN APP_USER_PROJECTS.APP_USER_ID IS 'FK USERS'
/

COMMENT ON COLUMN APP_USER_PROJECTS.PROJECT_ID IS 'FK PROJECTS'
/

COMMENT ON COLUMN APP_USER_PROJECTS.USER_DATABASE_IDENTIFIER IS 'Identifier used to determine a user when database objects are changed'
/


--
-- APP_USER_PROJECTS_PK  (Index) 
--
CREATE UNIQUE INDEX APP_USER_PROJECTS_PK ON APP_USER_PROJECTS
(APP_USER_PROJECT_ID)
LOGGING
/

ALTER TABLE APP_USER_PROJECTS ADD (
  CONSTRAINT APP_USER_PROJECTS_PK
  PRIMARY KEY
  (APP_USER_PROJECT_ID)
  USING INDEX APP_USER_PROJECTS_PK
  ENABLE VALIDATE)
/


--
-- ENVIRONMENTS  (Table) 
--
CREATE TABLE ENVIRONMENTS
(
  ENVIRONMENT_ID  NUMBER(10)                    NOT NULL,
  CODE            VARCHAR2(20 CHAR)             NOT NULL,
  NAME            VARCHAR2(500 CHAR)            NOT NULL,
  PROJECT_ID      NUMBER(10)                    NOT NULL,
  PRODUCTION_YN   VARCHAR2(1 CHAR)              DEFAULT 'N'                   NOT NULL,
  EXT_CODE        VARCHAR2(20 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN ENVIRONMENTS.ENVIRONMENT_ID IS 'PK'
/

COMMENT ON COLUMN ENVIRONMENTS.CODE IS 'Environment code'
/

COMMENT ON COLUMN ENVIRONMENTS.NAME IS 'Environment name'
/

COMMENT ON COLUMN ENVIRONMENTS.PROJECT_ID IS 'FK PROJECTS'
/

COMMENT ON COLUMN ENVIRONMENTS.PRODUCTION_YN IS 'Is the environment production or not'
/

COMMENT ON COLUMN ENVIRONMENTS.EXT_CODE IS 'Code from external system (for example OPAL)'
/


--
-- ENVIRONMENTS_PK  (Index) 
--
CREATE UNIQUE INDEX ENVIRONMENTS_PK ON ENVIRONMENTS
(ENVIRONMENT_ID)
LOGGING
/

ALTER TABLE ENVIRONMENTS ADD (
  CHECK ( production_yn IN ( 'N', 'Y' ) )
  ENABLE VALIDATE
,  CONSTRAINT ENVIRONMENTS_PK
  PRIMARY KEY
  (ENVIRONMENT_ID)
  USING INDEX ENVIRONMENTS_PK
  ENABLE VALIDATE)
/


--
-- EXCLUDE_FROM_RECORDING  (Table) 
--
CREATE TABLE EXCLUDE_FROM_RECORDING
(
  EXCLUDE_FROM_RECORDING_ID  NUMBER(10)         NOT NULL,
  LIKE_OR_REGEXP             VARCHAR2(1 CHAR),
  NAMING_PATTERN             VARCHAR2(4000 CHAR),
  USER_COMMENT               VARCHAR2(4000 CHAR),
  PROJECT_ID                 NUMBER(10)         NOT NULL,
  DB_SCHEMA_ID               NUMBER(10),
  OBJECT_TYPE_ID             NUMBER(10),
  FROM_PATCH_YN              VARCHAR2(1 CHAR)   DEFAULT 'Y'                   NOT NULL,
  FROM_REGISTER_YN           VARCHAR2(1 CHAR)   DEFAULT 'Y'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN EXCLUDE_FROM_RECORDING.EXCLUDE_FROM_RECORDING_ID IS 'PK'
/

COMMENT ON COLUMN EXCLUDE_FROM_RECORDING.LIKE_OR_REGEXP IS 'Values L or R or null (LIKE or REGEXP or no pattern used)'
/

COMMENT ON COLUMN EXCLUDE_FROM_RECORDING.NAMING_PATTERN IS 'Naming pattern for LIKE or REGEXP'
/

COMMENT ON COLUMN EXCLUDE_FROM_RECORDING.USER_COMMENT IS 'User comment'
/

COMMENT ON COLUMN EXCLUDE_FROM_RECORDING.PROJECT_ID IS 'FK PROJECTS'
/

COMMENT ON COLUMN EXCLUDE_FROM_RECORDING.DB_SCHEMA_ID IS 'FK OBJECTS (database schema)'
/

COMMENT ON COLUMN EXCLUDE_FROM_RECORDING.OBJECT_TYPE_ID IS 'FK OBJECT_TYPES'
/

COMMENT ON COLUMN EXCLUDE_FROM_RECORDING.FROM_PATCH_YN IS 'Exclude object from adding to patch when object is created with DDL script'
/

COMMENT ON COLUMN EXCLUDE_FROM_RECORDING.FROM_REGISTER_YN IS 'Exclude object from adding to register  when object is created with DDL script'
/


--
-- EXCLUDE_FROM_RECORDING_PK  (Index) 
--
CREATE UNIQUE INDEX EXCLUDE_FROM_RECORDING_PK ON EXCLUDE_FROM_RECORDING
(EXCLUDE_FROM_RECORDING_ID)
LOGGING
/

ALTER TABLE EXCLUDE_FROM_RECORDING ADD (
  CHECK ( from_register_yn IN ( 'N', 'Y' ) )
  ENABLE VALIDATE
,  CHECK ( from_patch_yn IN ( 'N', 'Y' ) )
  ENABLE VALIDATE
,  CHECK ( like_or_regexp IN ( 'L', 'R' ) )
  ENABLE VALIDATE
,  CONSTRAINT EXCLUDE_FROM_RECORDING_PK
  PRIMARY KEY
  (EXCLUDE_FROM_RECORDING_ID)
  USING INDEX EXCLUDE_FROM_RECORDING_PK
  ENABLE VALIDATE)
/


--
-- LINKED_PATCHES  (Table) 
--
CREATE TABLE LINKED_PATCHES
(
  LINKED_PATCH_ID  NUMBER(10)                   NOT NULL,
  PATCH1_ID        NUMBER(10)                   NOT NULL,
  PATCH2_ID        NUMBER(10)                   NOT NULL,
  USER_COMMENT     VARCHAR2(4000 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN LINKED_PATCHES.LINKED_PATCH_ID IS 'PK'
/

COMMENT ON COLUMN LINKED_PATCHES.PATCH1_ID IS 'FK PATCHES (first linked patch)'
/

COMMENT ON COLUMN LINKED_PATCHES.PATCH2_ID IS 'FK PATCHES (second linked patch)'
/

COMMENT ON COLUMN LINKED_PATCHES.USER_COMMENT IS 'User comment'
/


--
-- LINKED_PATCHES_PK  (Index) 
--
CREATE UNIQUE INDEX LINKED_PATCHES_PK ON LINKED_PATCHES
(LINKED_PATCH_ID)
LOGGING
/
--
-- LNKPATCH_UN  (Index) 
--
CREATE UNIQUE INDEX LNKPATCH_UN ON LINKED_PATCHES
(PATCH1_ID, PATCH2_ID)
LOGGING
/

ALTER TABLE LINKED_PATCHES ADD (
  CONSTRAINT LINKED_PATCHES_PK
  PRIMARY KEY
  (LINKED_PATCH_ID)
  USING INDEX LINKED_PATCHES_PK
  ENABLE VALIDATE
,  CONSTRAINT LNKPATCH_UN
  UNIQUE (PATCH1_ID, PATCH2_ID)
  USING INDEX LNKPATCH_UN
  ENABLE VALIDATE)
/


--
-- OBJECTS  (Table) 
--
CREATE TABLE OBJECTS
(
  OBJECT_ID         NUMBER(10)                  NOT NULL,
  OBJECT_TYPE_ID    NUMBER(10)                  NOT NULL,
  NAME              VARCHAR2(128 CHAR)          NOT NULL,
  FILENAME          VARCHAR2(500 CHAR),
  PARENT_OBJECT_ID  NUMBER(10),
  AA_NUMBER_01      NUMBER,
  USER_COMMENT      VARCHAR2(4000 CHAR),
  AA_VC2_01         VARCHAR2(4000 CHAR),
  AA_NUMBER_02      NUMBER,
  LOCK_TYPE         VARCHAR2(1 CHAR),
  LOCK_APP_USER_ID  NUMBER(10),
  LOCK_DATE         DATE                        DEFAULT null,
  LOCK_COMMENT      VARCHAR2(4000 CHAR),
  ACTIVE_YN         VARCHAR2(1 CHAR)            DEFAULT 'Y'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN OBJECTS.OBJECT_ID IS 'PK'
/

COMMENT ON COLUMN OBJECTS.OBJECT_TYPE_ID IS 'FK OBJECT_TYPES'
/

COMMENT ON COLUMN OBJECTS.NAME IS 'Object name'
/

COMMENT ON COLUMN OBJECTS.FILENAME IS 'Object file name (will be used as SQL file name when patch files are created - some objects as database schemas or workspaces have no file name)'
/

COMMENT ON COLUMN OBJECTS.AA_NUMBER_01 IS 'Additional attribute number 01 (for example APEX appilcation ID, APEX application page number...)'
/

COMMENT ON COLUMN OBJECTS.USER_COMMENT IS 'User comment'
/

COMMENT ON COLUMN OBJECTS.AA_VC2_01 IS 'Additional attribute VC2 01'
/

COMMENT ON COLUMN OBJECTS.AA_NUMBER_02 IS 'Additional attribute number 02 (for example database schema which can fetch app component script)'
/

COMMENT ON COLUMN OBJECTS.LOCK_TYPE IS 'Lock type (E exclusive, P patch)'
/

COMMENT ON COLUMN OBJECTS.LOCK_APP_USER_ID IS 'User who locked object'
/

COMMENT ON COLUMN OBJECTS.LOCK_DATE IS 'When the object is locked'
/

COMMENT ON COLUMN OBJECTS.LOCK_COMMENT IS 'Comment why is object locked'
/

COMMENT ON COLUMN OBJECTS.ACTIVE_YN IS 'Active object Yes/No'
/


--
-- OBJ_OBJECT_ID_IDX  (Index) 
--
CREATE UNIQUE INDEX OBJ_OBJECT_ID_IDX ON OBJECTS
(OBJECT_ID)
LOGGING
/

ALTER TABLE OBJECTS ADD (
  CHECK ( active_yn IN ( 'N', 'Y' ) )
  ENABLE VALIDATE
,  CHECK ( lock_type IN ( 'E', 'P' ) )
  ENABLE VALIDATE
,  CONSTRAINT OBJECTS_PK
  PRIMARY KEY
  (OBJECT_ID)
  USING INDEX OBJ_OBJECT_ID_IDX
  ENABLE VALIDATE)
/


--
-- OBJECT_TYPES  (Table) 
--
CREATE TABLE OBJECT_TYPES
(
  OBJECT_TYPE_ID            NUMBER(10)          NOT NULL,
  CODE                      VARCHAR2(20 CHAR)   NOT NULL,
  NAME                      VARCHAR2(500 CHAR)  NOT NULL,
  OBJECT_LOCATION           VARCHAR2(5 CHAR),
  TARGET_FOLDER             VARCHAR2(1000 CHAR),
  SOURCE_FOLDER             VARCHAR2(1000 CHAR),
  RECORD_AS                 VARCHAR2(10 CHAR)   DEFAULT 'OBJECT'              NOT NULL,
  RECORD_AS_OBJECT_TYPE_ID  NUMBER(10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN OBJECT_TYPES.OBJECT_TYPE_ID IS 'PK'
/

COMMENT ON COLUMN OBJECT_TYPES.CODE IS 'Object type short code (used in program logic)'
/

COMMENT ON COLUMN OBJECT_TYPES.NAME IS 'Object type name'
/

COMMENT ON COLUMN OBJECT_TYPES.OBJECT_LOCATION IS 'Object location (database, application - values DB, APP); workspaces and other similar object types don''t have object location set'
/

COMMENT ON COLUMN OBJECT_TYPES.TARGET_FOLDER IS 'Target folder used for script file path generation (in patch ZIP)'
/

COMMENT ON COLUMN OBJECT_TYPES.SOURCE_FOLDER IS 'Source folder (GIT, SVN...) with object scripts'
/

COMMENT ON COLUMN OBJECT_TYPES.RECORD_AS IS 'Is object recorded as script or object (values SCRIPT or OBJECT)'
/

COMMENT ON COLUMN OBJECT_TYPES.RECORD_AS_OBJECT_TYPE_ID IS 'Record scrips as another object type (for example INDEX as TABLE script)'
/


--
-- OBJECT_TYPES_PK  (Index) 
--
CREATE UNIQUE INDEX OBJECT_TYPES_PK ON OBJECT_TYPES
(OBJECT_TYPE_ID)
LOGGING
/

ALTER TABLE OBJECT_TYPES ADD (
  CHECK ( record_as IN ( 'OBJECT', 'SCRIPT' ) )
  ENABLE VALIDATE
,  CHECK ( object_location IN ( 'APP', 'DB' ) )
  ENABLE VALIDATE
,  CONSTRAINT OBJECT_TYPES_PK
  PRIMARY KEY
  (OBJECT_TYPE_ID)
  USING INDEX OBJECT_TYPES_PK
  ENABLE VALIDATE)
/


--
-- PATCHES  (Table) 
--
CREATE TABLE PATCHES
(
  PATCH_ID                NUMBER(10)            NOT NULL,
  TASK_ID                 NUMBER(10)            NOT NULL,
  CREATED_APP_USER_ID     NUMBER(10)            NOT NULL,
  PATCH_NUMBER            NUMBER(5)             DEFAULT 0                     NOT NULL,
  AUTOMATIC_YN            VARCHAR2(1 CHAR)      DEFAULT 'Y'                   NOT NULL,
  CREATED_ON              DATE                  DEFAULT sysdate               NOT NULL,
  CONFIRMED_APP_USER_ID   NUMBER(10),
  CONFIRMED_ON            DATE,
  USER_COMMENTS           VARCHAR2(4000 CHAR),
  RELEASE_ID              NUMBER(10),
  RELEASE_ORDER           NUMBER(5),
  RELEASE_NOTES           VARCHAR2(4000 CHAR),
  FOR_PRODUCTION_YN       VARCHAR2(1 CHAR)      DEFAULT 'N'                   NOT NULL,
  FOR_PRODUCTION_COMMENT  VARCHAR2(4000 CHAR),
  OWNER_APP_USER_ID       NUMBER(10)            NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN PATCHES.PATCH_ID IS 'PK'
/

COMMENT ON COLUMN PATCHES.TASK_ID IS 'FK TASKS'
/

COMMENT ON COLUMN PATCHES.CREATED_APP_USER_ID IS 'FK APP_USERS - patch created by'
/

COMMENT ON COLUMN PATCHES.PATCH_NUMBER IS 'Patch number within task (1, 2, 3...)'
/

COMMENT ON COLUMN PATCHES.AUTOMATIC_YN IS 'Ii the task automatic? Manual tasks are filled and prepared manually, usually when a correction of existing already installed patch is made.'
/

COMMENT ON COLUMN PATCHES.CREATED_ON IS 'Patch created on'
/

COMMENT ON COLUMN PATCHES.CONFIRMED_APP_USER_ID IS 'FK APP_USERS - patch confirmed by'
/

COMMENT ON COLUMN PATCHES.CONFIRMED_ON IS 'Patch confirmed on'
/

COMMENT ON COLUMN PATCHES.USER_COMMENTS IS 'User comments'
/

COMMENT ON COLUMN PATCHES.RELEASE_ID IS 'FK RELEASES'
/

COMMENT ON COLUMN PATCHES.RELEASE_ORDER IS 'Patch order within release'
/

COMMENT ON COLUMN PATCHES.RELEASE_NOTES IS 'Release notes'
/

COMMENT ON COLUMN PATCHES.FOR_PRODUCTION_YN IS 'Is patch confirmed to be installed on production?'
/

COMMENT ON COLUMN PATCHES.OWNER_APP_USER_ID IS 'FK APP_USERS - current owner of the patch'
/


--
-- PTCH_PATCH_ID_IDX  (Index) 
--
CREATE UNIQUE INDEX PTCH_PATCH_ID_IDX ON PATCHES
(PATCH_ID)
LOGGING
/
--
-- PTCH_UN  (Index) 
--
CREATE UNIQUE INDEX PTCH_UN ON PATCHES
(TASK_ID, PATCH_NUMBER)
LOGGING
/

ALTER TABLE PATCHES ADD (
  CHECK ( automatic_yn IN ( 'N', 'Y' ) )
  ENABLE VALIDATE
,  CHECK ( for_production_yn IN ( 'N', 'Y' ) )
  ENABLE VALIDATE
,  CONSTRAINT PATCHES_PK
  PRIMARY KEY
  (PATCH_ID)
  USING INDEX PTCH_PATCH_ID_IDX
  ENABLE VALIDATE
,  CONSTRAINT PTCH_UN
  UNIQUE (TASK_ID, PATCH_NUMBER)
  USING INDEX PTCH_UN
  ENABLE VALIDATE)
/


--
-- PATCH_DISABLE_APPS  (Table) 
--
CREATE TABLE PATCH_DISABLE_APPS
(
  PATCH_DISABLE_APP_ID  NUMBER(10)              NOT NULL,
  PATCH_ID              NUMBER(10)              NOT NULL,
  APPLICATION_ID        NUMBER(10)              NOT NULL,
  USER_COMMENT          VARCHAR2(4000 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN PATCH_DISABLE_APPS.PATCH_DISABLE_APP_ID IS 'PK'
/

COMMENT ON COLUMN PATCH_DISABLE_APPS.PATCH_ID IS 'FK PATCHES'
/

COMMENT ON COLUMN PATCH_DISABLE_APPS.APPLICATION_ID IS 'FK OBJECTS (application)'
/

COMMENT ON COLUMN PATCH_DISABLE_APPS.USER_COMMENT IS 'User comment'
/


--
-- PATCH_DISABLE_APPS_PK  (Index) 
--
CREATE UNIQUE INDEX PATCH_DISABLE_APPS_PK ON PATCH_DISABLE_APPS
(PATCH_DISABLE_APP_ID)
LOGGING
/

ALTER TABLE PATCH_DISABLE_APPS ADD (
  CONSTRAINT PATCH_DISABLE_APPS_PK
  PRIMARY KEY
  (PATCH_DISABLE_APP_ID)
  USING INDEX PATCH_DISABLE_APPS_PK
  ENABLE VALIDATE)
/


--
-- PATCH_INSTALLS  (Table) 
--
CREATE TABLE PATCH_INSTALLS
(
  PATCH_INSTALL_ID  NUMBER(10)                  NOT NULL,
  ENVIRONMENT_ID    NUMBER(10)                  NOT NULL,
  PATCH_ID          NUMBER(10)                  NOT NULL,
  START_DATE        DATE                        DEFAULT sysdate               NOT NULL,
  END_DATE          DATE,
  USER_COMMENT      VARCHAR2(4000 CHAR),
  EXT_SYSTEM_CODE   VARCHAR2(50 CHAR),
  EXT_SYSTEM_REF    VARCHAR2(50 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN PATCH_INSTALLS.PATCH_INSTALL_ID IS 'PK'
/

COMMENT ON COLUMN PATCH_INSTALLS.START_DATE IS 'Patch install start'
/

COMMENT ON COLUMN PATCH_INSTALLS.END_DATE IS 'Patch install end (empty value meas that install failed or is in progress)'
/

COMMENT ON COLUMN PATCH_INSTALLS.USER_COMMENT IS 'Custom user or automatic comment'
/

COMMENT ON COLUMN PATCH_INSTALLS.EXT_SYSTEM_CODE IS 'External system code (if patch is installed from external system)'
/

COMMENT ON COLUMN PATCH_INSTALLS.EXT_SYSTEM_REF IS 'External system reference (if patch is installed from external system)'
/


--
-- PATCH_INSTALLS_PK  (Index) 
--
CREATE UNIQUE INDEX PATCH_INSTALLS_PK ON PATCH_INSTALLS
(PATCH_INSTALL_ID)
LOGGING
/

ALTER TABLE PATCH_INSTALLS ADD (
  CONSTRAINT PATCH_INSTALLS_PK
  PRIMARY KEY
  (PATCH_INSTALL_ID)
  USING INDEX PATCH_INSTALLS_PK
  ENABLE VALIDATE)
/


--
-- PATCH_OBJECTS  (Table) 
--
CREATE TABLE PATCH_OBJECTS
(
  PATCH_OBJECT_ID     NUMBER(10)                NOT NULL,
  PATCH_ID            NUMBER(10)                NOT NULL,
  OBJECT_ID           NUMBER(10)                NOT NULL,
  SQL_CONTENT         CLOB,
  ADDED_ON            DATE                      DEFAULT sysdate               NOT NULL,
  APP_USER_ID         NUMBER(10)                NOT NULL,
  USER_COMMENTS       VARCHAR2(4000 CHAR),
  OBJECT_VERSION      NUMBER(10)                DEFAULT NULL,
  AS_PATCH_SCRIPT_YN  VARCHAR2(1 CHAR)          DEFAULT 'N'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN PATCH_OBJECTS.PATCH_OBJECT_ID IS 'PK'
/

COMMENT ON COLUMN PATCH_OBJECTS.PATCH_ID IS 'FK PATCHES'
/

COMMENT ON COLUMN PATCH_OBJECTS.OBJECT_ID IS 'FK OBJECTS'
/

COMMENT ON COLUMN PATCH_OBJECTS.SQL_CONTENT IS 'SQL object source (for packages -> package definition)'
/

COMMENT ON COLUMN PATCH_OBJECTS.ADDED_ON IS 'Date and time when object is added to patch'
/

COMMENT ON COLUMN PATCH_OBJECTS.APP_USER_ID IS 'FK APP_USERS - user added object to patch'
/

COMMENT ON COLUMN PATCH_OBJECTS.USER_COMMENTS IS 'User comments'
/

COMMENT ON COLUMN PATCH_OBJECTS.OBJECT_VERSION IS 'Object version (used for patch dependency analysis and object versioning) - it is set when patch is confirmed'
/

COMMENT ON COLUMN PATCH_OBJECTS.AS_PATCH_SCRIPT_YN IS 'If object is recorded as script then here is only marked as changed - install scripts will be prepared from patch scripts - this information will be used for object versioning and preparing source scripts for version control'
/


--
-- PATCH_OBJECTS_PK  (Index) 
--
CREATE UNIQUE INDEX PATCH_OBJECTS_PK ON PATCH_OBJECTS
(PATCH_OBJECT_ID)
LOGGING
/
--
-- PTCHOBJ_UN  (Index) 
--
CREATE UNIQUE INDEX PTCHOBJ_UN ON PATCH_OBJECTS
(PATCH_ID, OBJECT_ID)
LOGGING
/

ALTER TABLE PATCH_OBJECTS ADD (
  CHECK ( as_patch_script_yn IN ( 'N', 'Y' ) )
  ENABLE VALIDATE
,  CONSTRAINT PATCH_OBJECTS_PK
  PRIMARY KEY
  (PATCH_OBJECT_ID)
  USING INDEX PATCH_OBJECTS_PK
  ENABLE VALIDATE
,  CONSTRAINT PTCHOBJ_UN
  UNIQUE (PATCH_ID, OBJECT_ID)
  USING INDEX PTCHOBJ_UN
  ENABLE VALIDATE)
/


--
-- PATCH_OBJ_TYPE_FOLDERS  (Table) 
--
CREATE TABLE PATCH_OBJ_TYPE_FOLDERS
(
  PATCH_OBJ_TYPE_FOLDER_ID  NUMBER(10)          NOT NULL,
  TARGET_FOLDER             VARCHAR2(1000 CHAR),
  SOURCE_FOLDER             VARCHAR2(1000 CHAR),
  PATCH_TEMPLATE_ID         NUMBER(10)          NOT NULL,
  OBJECT_TYPE_ID            NUMBER(10)          NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN PATCH_OBJ_TYPE_FOLDERS.PATCH_OBJ_TYPE_FOLDER_ID IS 'PK'
/

COMMENT ON COLUMN PATCH_OBJ_TYPE_FOLDERS.TARGET_FOLDER IS 'Sub-folder used for script path generation in patch'
/

COMMENT ON COLUMN PATCH_OBJ_TYPE_FOLDERS.SOURCE_FOLDER IS 'Source folder (GIT, SVN...) with object scripts'
/

COMMENT ON COLUMN PATCH_OBJ_TYPE_FOLDERS.PATCH_TEMPLATE_ID IS 'FK PATCH_TEMPLATES'
/

COMMENT ON COLUMN PATCH_OBJ_TYPE_FOLDERS.OBJECT_TYPE_ID IS 'FK OBJECT_TYPES'
/


--
-- PATCH_OBJ_TYPE_FOLDERS_PK  (Index) 
--
CREATE UNIQUE INDEX PATCH_OBJ_TYPE_FOLDERS_PK ON PATCH_OBJ_TYPE_FOLDERS
(PATCH_OBJ_TYPE_FOLDER_ID)
LOGGING
/

ALTER TABLE PATCH_OBJ_TYPE_FOLDERS ADD (
  CONSTRAINT PATCH_OBJ_TYPE_FOLDERS_PK
  PRIMARY KEY
  (PATCH_OBJ_TYPE_FOLDER_ID)
  USING INDEX PATCH_OBJ_TYPE_FOLDERS_PK
  ENABLE VALIDATE)
/


--
-- PATCH_SCRIPTS  (Table) 
--
CREATE TABLE PATCH_SCRIPTS
(
  PATCH_SCRIPT_ID       NUMBER(10)              NOT NULL,
  PATCH_ID              NUMBER(10)              NOT NULL,
  SQL_CONTENT           CLOB,
  ADDED_ON              DATE                    DEFAULT sysdate               NOT NULL,
  APP_USER_ID           NUMBER(10)              NOT NULL,
  FILENAME              VARCHAR2(500 CHAR)      NOT NULL,
  USER_COMMENTS         VARCHAR2(4000 CHAR),
  ORDER_BY              NUMBER(5)               NOT NULL,
  DATABASE_SCHEMA_ID    NUMBER(10)              NOT NULL,
  PATCH_SCRIPT_TYPE_ID  NUMBER(10)              NOT NULL,
  OBJECT_TYPE_ID        NUMBER(10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN PATCH_SCRIPTS.PATCH_SCRIPT_ID IS 'PK'
/

COMMENT ON COLUMN PATCH_SCRIPTS.PATCH_ID IS 'FK PATCHES'
/

COMMENT ON COLUMN PATCH_SCRIPTS.SQL_CONTENT IS 'SQL script source'
/

COMMENT ON COLUMN PATCH_SCRIPTS.ADDED_ON IS 'Date and time when object is added to patch'
/

COMMENT ON COLUMN PATCH_SCRIPTS.APP_USER_ID IS 'FK APP_USERS - user added script to patch'
/

COMMENT ON COLUMN PATCH_SCRIPTS.FILENAME IS 'Script file name (will be used as SQL file name when patch files are created)'
/

COMMENT ON COLUMN PATCH_SCRIPTS.USER_COMMENTS IS 'User comments'
/

COMMENT ON COLUMN PATCH_SCRIPTS.ORDER_BY IS 'Script order by in patch'
/

COMMENT ON COLUMN PATCH_SCRIPTS.DATABASE_SCHEMA_ID IS 'FK OBJECTS'
/

COMMENT ON COLUMN PATCH_SCRIPTS.PATCH_SCRIPT_TYPE_ID IS 'FK PATCH_SCRIPT_TYPES'
/


--
-- PSCR_PATCH_SCRIPT_ID_IDX  (Index) 
--
CREATE UNIQUE INDEX PSCR_PATCH_SCRIPT_ID_IDX ON PATCH_SCRIPTS
(PATCH_SCRIPT_ID)
LOGGING
/
--
-- PSCR_UN  (Index) 
--
CREATE UNIQUE INDEX PSCR_UN ON PATCH_SCRIPTS
(PATCH_ID, ORDER_BY)
LOGGING
/

ALTER TABLE PATCH_SCRIPTS ADD (
  CONSTRAINT PATCH_SCRIPTS_PK
  PRIMARY KEY
  (PATCH_SCRIPT_ID)
  USING INDEX PSCR_PATCH_SCRIPT_ID_IDX
  ENABLE VALIDATE
,  CONSTRAINT PSCR_UN
  UNIQUE (PATCH_ID, ORDER_BY)
  USING INDEX PSCR_UN
  ENABLE VALIDATE)
/


--
-- PATCH_SCRIPT_TYPES  (Table) 
--
CREATE TABLE PATCH_SCRIPT_TYPES
(
  PATCH_SCRIPT_TYPE_ID  NUMBER(10)              NOT NULL,
  CODE                  VARCHAR2(20 CHAR)       NOT NULL,
  NAME                  VARCHAR2(500 CHAR)      NOT NULL,
  TARGET_FOLDER         VARCHAR2(1000 CHAR),
  DEFAULT_YN            VARCHAR2(1 CHAR)        DEFAULT 'N'                   NOT NULL,
  SEQ                   NUMBER(5)               NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN PATCH_SCRIPT_TYPES.PATCH_SCRIPT_TYPE_ID IS 'PK'
/

COMMENT ON COLUMN PATCH_SCRIPT_TYPES.CODE IS 'Patch script type code'
/

COMMENT ON COLUMN PATCH_SCRIPT_TYPES.NAME IS 'Patch script type name'
/

COMMENT ON COLUMN PATCH_SCRIPT_TYPES.TARGET_FOLDER IS 'Target folder'
/

COMMENT ON COLUMN PATCH_SCRIPT_TYPES.DEFAULT_YN IS 'Default script type Y/N'
/

COMMENT ON COLUMN PATCH_SCRIPT_TYPES.SEQ IS 'Sequence in list of values'
/


--
-- PATCH_SCRIPT_TYPES_PK  (Index) 
--
CREATE UNIQUE INDEX PATCH_SCRIPT_TYPES_PK ON PATCH_SCRIPT_TYPES
(PATCH_SCRIPT_TYPE_ID)
LOGGING
/

ALTER TABLE PATCH_SCRIPT_TYPES ADD (
  CHECK ( default_yn IN ( 'N', 'Y' ) )
  ENABLE VALIDATE
,  CONSTRAINT PATCH_SCRIPT_TYPES_PK
  PRIMARY KEY
  (PATCH_SCRIPT_TYPE_ID)
  USING INDEX PATCH_SCRIPT_TYPES_PK
  ENABLE VALIDATE)
/


--
-- PATCH_TEMPLATES  (Table) 
--
CREATE TABLE PATCH_TEMPLATES
(
  PATCH_TEMPLATE_ID  NUMBER(10)                 NOT NULL,
  CODE               VARCHAR2(20 CHAR)          NOT NULL,
  NAME               VARCHAR2(500 CHAR)         NOT NULL,
  PROCEDURE_NAME     VARCHAR2(128 CHAR),
  SQL_SUBFOLDER      VARCHAR2(500 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN PATCH_TEMPLATES.PATCH_TEMPLATE_ID IS 'PK'
/

COMMENT ON COLUMN PATCH_TEMPLATES.CODE IS 'Template code'
/

COMMENT ON COLUMN PATCH_TEMPLATES.NAME IS 'Template name'
/

COMMENT ON COLUMN PATCH_TEMPLATES.PROCEDURE_NAME IS 'Name of procedure which will be executed to fill placeholders in patch template files when patch is downloaded'
/

COMMENT ON COLUMN PATCH_TEMPLATES.SQL_SUBFOLDER IS 'Subfolder in which patch folders are stored.'
/


--
-- PATCH_TEMPLATES_PK  (Index) 
--
CREATE UNIQUE INDEX PATCH_TEMPLATES_PK ON PATCH_TEMPLATES
(PATCH_TEMPLATE_ID)
LOGGING
/

ALTER TABLE PATCH_TEMPLATES ADD (
  CONSTRAINT PATCH_TEMPLATES_PK
  PRIMARY KEY
  (PATCH_TEMPLATE_ID)
  USING INDEX PATCH_TEMPLATES_PK
  ENABLE VALIDATE)
/


--
-- PATCH_TEMPLATE_FILES  (Table) 
--
CREATE TABLE PATCH_TEMPLATE_FILES
(
  PATCH_TEMPLATE_FILE_ID  NUMBER(10)            NOT NULL,
  FILE_NAME               VARCHAR2(100 CHAR)    NOT NULL,
  PATCH_TEMPLATE_ID       NUMBER(10)            NOT NULL,
  FILE_CONTENT            BLOB,
  USER_COMMENT            VARCHAR2(4000 CHAR),
  USAGE_TYPE              VARCHAR2(5 CHAR)      DEFAULT 'A'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN PATCH_TEMPLATE_FILES.PATCH_TEMPLATE_FILE_ID IS 'PK'
/

COMMENT ON COLUMN PATCH_TEMPLATE_FILES.FILE_NAME IS 'File name'
/

COMMENT ON COLUMN PATCH_TEMPLATE_FILES.FILE_CONTENT IS 'File content'
/

COMMENT ON COLUMN PATCH_TEMPLATE_FILES.USER_COMMENT IS 'User comment'
/

COMMENT ON COLUMN PATCH_TEMPLATE_FILES.USAGE_TYPE IS 'Usage type (A always used, SL schema level, M manually generated, N never used, U utility script)'
/


ALTER TABLE PATCH_TEMPLATE_FILES ADD (
  CHECK ( usage_type IN ( 'A', 'M', 'N', 'SL', 'U' ) )
  ENABLE VALIDATE)
/


--
-- PROJECTS  (Table) 
--
CREATE TABLE PROJECTS
(
  PROJECT_ID  NUMBER(10)                        NOT NULL,
  NAME        VARCHAR2(500 CHAR)                NOT NULL,
  CODE        VARCHAR2(20 CHAR)                 NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN PROJECTS.PROJECT_ID IS 'PK'
/

COMMENT ON COLUMN PROJECTS.NAME IS 'Project name'
/

COMMENT ON COLUMN PROJECTS.CODE IS 'Project code'
/


--
-- PROJECTS_PK  (Index) 
--
CREATE UNIQUE INDEX PROJECTS_PK ON PROJECTS
(PROJECT_ID)
LOGGING
/

ALTER TABLE PROJECTS ADD (
  CONSTRAINT PROJECTS_PK
  PRIMARY KEY
  (PROJECT_ID)
  USING INDEX PROJECTS_PK
  ENABLE VALIDATE)
/


--
-- PROJECT_APPS  (Table) 
--
CREATE TABLE PROJECT_APPS
(
  PROJECT_APP_ID  NUMBER(10)                    NOT NULL,
  USER_COMMENT    VARCHAR2(4000 CHAR),
  PROJECT_ID      NUMBER(10)                    NOT NULL,
  OBJECT_ID       NUMBER(10)                    NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN PROJECT_APPS.PROJECT_APP_ID IS 'PK'
/

COMMENT ON COLUMN PROJECT_APPS.USER_COMMENT IS 'User comment'
/

COMMENT ON COLUMN PROJECT_APPS.OBJECT_ID IS 'FK OBJECTS (applications)'
/


--
-- PRJAPP_UN  (Index) 
--
CREATE UNIQUE INDEX PRJAPP_UN ON PROJECT_APPS
(PROJECT_ID, OBJECT_ID)
LOGGING
/
--
-- PROJECT_APPS_PK  (Index) 
--
CREATE UNIQUE INDEX PROJECT_APPS_PK ON PROJECT_APPS
(PROJECT_APP_ID)
LOGGING
/

ALTER TABLE PROJECT_APPS ADD (
  CONSTRAINT PROJECT_APPS_PK
  PRIMARY KEY
  (PROJECT_APP_ID)
  USING INDEX PROJECT_APPS_PK
  ENABLE VALIDATE
,  CONSTRAINT PRJAPP_UN
  UNIQUE (PROJECT_ID, OBJECT_ID)
  USING INDEX PRJAPP_UN
  ENABLE VALIDATE)
/


--
-- PROJECT_DATABASE_SCHEMAS  (Table) 
--
CREATE TABLE PROJECT_DATABASE_SCHEMAS
(
  PROJECT_DATABASE_SCHEMA_ID  NUMBER(10),
  PROJECT_ID                  NUMBER(10)        NOT NULL,
  OBJECT_ID                   NUMBER(10)        NOT NULL,
  USER_COMMENT                VARCHAR2(4000 CHAR),
  DEFAULT_YN                  VARCHAR2(1 CHAR)  DEFAULT 'N'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN PROJECT_DATABASE_SCHEMAS.PROJECT_DATABASE_SCHEMA_ID IS 'PK'
/

COMMENT ON COLUMN PROJECT_DATABASE_SCHEMAS.PROJECT_ID IS 'FK PROJECTS'
/

COMMENT ON COLUMN PROJECT_DATABASE_SCHEMAS.OBJECT_ID IS 'FK Objects (database schema)'
/

COMMENT ON COLUMN PROJECT_DATABASE_SCHEMAS.USER_COMMENT IS 'User comment'
/

COMMENT ON COLUMN PROJECT_DATABASE_SCHEMAS.DEFAULT_YN IS 'Default schema'
/


--
-- PDS_UN  (Index) 
--
CREATE UNIQUE INDEX PDS_UN ON PROJECT_DATABASE_SCHEMAS
(PROJECT_ID, OBJECT_ID)
LOGGING
/

ALTER TABLE PROJECT_DATABASE_SCHEMAS ADD (
  CHECK ( default_yn IN ( 'N', 'Y' ) )
  ENABLE VALIDATE
,  CONSTRAINT PDS_UN
  UNIQUE (PROJECT_ID, OBJECT_ID)
  USING INDEX PDS_UN
  ENABLE VALIDATE)
/


--
-- PROJECT_SETTINGS  (Table) 
--
CREATE TABLE PROJECT_SETTINGS
(
  PROJECT_SETTING_ID  NUMBER(10)                NOT NULL,
  PROJECT_ID          NUMBER(10)                NOT NULL,
  SETTING_ID          NUMBER(10)                NOT NULL,
  VALUE_NUM           NUMBER,
  VALUE_VC2           VARCHAR2(4000 CHAR),
  VALUE_DATE          DATE
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN PROJECT_SETTINGS.PROJECT_SETTING_ID IS 'PK'
/

COMMENT ON COLUMN PROJECT_SETTINGS.PROJECT_ID IS 'FK PROJECTS'
/

COMMENT ON COLUMN PROJECT_SETTINGS.SETTING_ID IS 'FK R_SETTINGS'
/

COMMENT ON COLUMN PROJECT_SETTINGS.VALUE_NUM IS 'Numeric value'
/

COMMENT ON COLUMN PROJECT_SETTINGS.VALUE_VC2 IS 'Varchar2 value'
/

COMMENT ON COLUMN PROJECT_SETTINGS.VALUE_DATE IS 'Date value'
/


--
-- PROJECT_SETTINGS_PK  (Index) 
--
CREATE UNIQUE INDEX PROJECT_SETTINGS_PK ON PROJECT_SETTINGS
(PROJECT_SETTING_ID)
LOGGING
/

ALTER TABLE PROJECT_SETTINGS ADD (
  CONSTRAINT PROJECT_SETTINGS_PK
  PRIMARY KEY
  (PROJECT_SETTING_ID)
  USING INDEX PROJECT_SETTINGS_PK
  ENABLE VALIDATE)
/


--
-- RELEASES  (Table) 
--
CREATE TABLE RELEASES
(
  RELEASE_ID           NUMBER(10)               NOT NULL,
  PROJECT_ID           NUMBER(10)               NOT NULL,
  CODE                 VARCHAR2(20 CHAR)        NOT NULL,
  RELEASE_DATE         DATE,
  DESCRIPTION          VARCHAR2(500 CHAR),
  CREATED_APP_USER_ID  NUMBER(10)               NOT NULL,
  PLANED_RELEASE_DATE  DATE,
  PLANED_DURATION      VARCHAR2(4000 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN RELEASES.RELEASE_ID IS 'PK'
/

COMMENT ON COLUMN RELEASES.PROJECT_ID IS 'FK PROJECTS'
/

COMMENT ON COLUMN RELEASES.CODE IS 'Release code'
/

COMMENT ON COLUMN RELEASES.RELEASE_DATE IS 'Actual Release date'
/

COMMENT ON COLUMN RELEASES.DESCRIPTION IS 'Release description'
/

COMMENT ON COLUMN RELEASES.CREATED_APP_USER_ID IS 'User created release.'
/

COMMENT ON COLUMN RELEASES.PLANED_RELEASE_DATE IS 'Planed Release date'
/

COMMENT ON COLUMN RELEASES.PLANED_DURATION IS 'Description of planed release duration (for example "approx 1 hr")'
/


--
-- RELEASES_PK  (Index) 
--
CREATE UNIQUE INDEX RELEASES_PK ON RELEASES
(RELEASE_ID)
LOGGING
/

ALTER TABLE RELEASES ADD (
  CONSTRAINT RELEASES_PK
  PRIMARY KEY
  (RELEASE_ID)
  USING INDEX RELEASES_PK
  ENABLE VALIDATE)
/


--
-- RELEASE_DOC_PARTS  (Table) 
--
CREATE TABLE RELEASE_DOC_PARTS
(
  RELEASE_DOC_PART_ID  NUMBER(10)               NOT NULL,
  NAME                 VARCHAR2(500 CHAR)       NOT NULL,
  PLACEHOLDER          VARCHAR2(20 CHAR),
  ORDER_BY             NUMBER(5),
  PROJECT_ID           NUMBER(10)               NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN RELEASE_DOC_PARTS.RELEASE_DOC_PART_ID IS 'PK'
/

COMMENT ON COLUMN RELEASE_DOC_PARTS.PLACEHOLDER IS 'Placeholder to replace with content in release documents'
/

COMMENT ON COLUMN RELEASE_DOC_PARTS.ORDER_BY IS 'Order by to display on page for data input'
/

COMMENT ON COLUMN RELEASE_DOC_PARTS.PROJECT_ID IS 'FK PROJECTS'
/


--
-- RELDP_UN  (Index) 
--
CREATE UNIQUE INDEX RELDP_UN ON RELEASE_DOC_PARTS
(NAME, PROJECT_ID)
LOGGING
/
--
-- RELEASE_DOC_PARTS_PK  (Index) 
--
CREATE UNIQUE INDEX RELEASE_DOC_PARTS_PK ON RELEASE_DOC_PARTS
(RELEASE_DOC_PART_ID)
LOGGING
/

ALTER TABLE RELEASE_DOC_PARTS ADD (
  CONSTRAINT RELEASE_DOC_PARTS_PK
  PRIMARY KEY
  (RELEASE_DOC_PART_ID)
  USING INDEX RELEASE_DOC_PARTS_PK
  ENABLE VALIDATE
,  CONSTRAINT RELDP_UN
  UNIQUE (NAME, PROJECT_ID)
  USING INDEX RELDP_UN
  ENABLE VALIDATE)
/


--
-- RELEASE_DOC_PART_TXT  (Table) 
--
CREATE TABLE RELEASE_DOC_PART_TXT
(
  RELEASE_DOC_PART_TXT_ID  NUMBER(10)           NOT NULL,
  RELEASE_DOC_PART_ID      NUMBER(10)           NOT NULL,
  RELEASE_ID               NUMBER(10)           NOT NULL,
  PART_TEXT                VARCHAR2(4000 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN RELEASE_DOC_PART_TXT.RELEASE_DOC_PART_TXT_ID IS 'PK'
/

COMMENT ON COLUMN RELEASE_DOC_PART_TXT.RELEASE_DOC_PART_ID IS 'FK RELEASE_DOC_PARTS'
/

COMMENT ON COLUMN RELEASE_DOC_PART_TXT.RELEASE_ID IS 'FK RELEASES'
/

COMMENT ON COLUMN RELEASE_DOC_PART_TXT.PART_TEXT IS 'A text which should be included in release document'
/


--
-- RELDPTXT_UN  (Index) 
--
CREATE UNIQUE INDEX RELDPTXT_UN ON RELEASE_DOC_PART_TXT
(RELEASE_DOC_PART_ID, RELEASE_ID)
LOGGING
/
--
-- RELEASE_DOC_PART_TXT_PK  (Index) 
--
CREATE UNIQUE INDEX RELEASE_DOC_PART_TXT_PK ON RELEASE_DOC_PART_TXT
(RELEASE_DOC_PART_TXT_ID)
LOGGING
/

ALTER TABLE RELEASE_DOC_PART_TXT ADD (
  CONSTRAINT RELEASE_DOC_PART_TXT_PK
  PRIMARY KEY
  (RELEASE_DOC_PART_TXT_ID)
  USING INDEX RELEASE_DOC_PART_TXT_PK
  ENABLE VALIDATE
,  CONSTRAINT RELDPTXT_UN
  UNIQUE (RELEASE_DOC_PART_ID, RELEASE_ID)
  USING INDEX RELDPTXT_UN
  ENABLE VALIDATE)
/


--
-- RELEASE_SCRIPTS  (Table) 
--
CREATE TABLE RELEASE_SCRIPTS
(
  RELEASE_SCRIPT_ID   NUMBER(10)                NOT NULL,
  RELEASE_ID          NUMBER(10)                NOT NULL,
  RLS_SCRIPT_TYPE_ID  NUMBER(10)                NOT NULL,
  DATABASE_SCHEMA_ID  NUMBER(10)                NOT NULL,
  SQL_CONTENT         CLOB,
  ADDED_ON            DATE                      DEFAULT sysdate               NOT NULL,
  FILENAME            VARCHAR2(500 CHAR)        NOT NULL,
  USER_COMMENTS       VARCHAR2(4000 CHAR),
  ORDER_BY            NUMBER(5)                 NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN RELEASE_SCRIPTS.RELEASE_SCRIPT_ID IS 'PK'
/

COMMENT ON COLUMN RELEASE_SCRIPTS.RELEASE_ID IS 'FK RELEASES'
/

COMMENT ON COLUMN RELEASE_SCRIPTS.RLS_SCRIPT_TYPE_ID IS 'FK RELEASE_SCRIPT_TYPES'
/

COMMENT ON COLUMN RELEASE_SCRIPTS.DATABASE_SCHEMA_ID IS 'FK OBJECTS'
/

COMMENT ON COLUMN RELEASE_SCRIPTS.SQL_CONTENT IS 'SQL script source'
/

COMMENT ON COLUMN RELEASE_SCRIPTS.ADDED_ON IS 'Date and time when script is added to release'
/

COMMENT ON COLUMN RELEASE_SCRIPTS.FILENAME IS 'Script file name (will be used as SQL file name when release files are created)'
/

COMMENT ON COLUMN RELEASE_SCRIPTS.USER_COMMENTS IS 'User comments'
/

COMMENT ON COLUMN RELEASE_SCRIPTS.ORDER_BY IS 'Script order by in release'
/


--
-- RELEASE_SCRIPTS_PK  (Index) 
--
CREATE UNIQUE INDEX RELEASE_SCRIPTS_PK ON RELEASE_SCRIPTS
(RELEASE_SCRIPT_ID)
LOGGING
/
--
-- RSCR_UN  (Index) 
--
CREATE UNIQUE INDEX RSCR_UN ON RELEASE_SCRIPTS
(RELEASE_ID, ORDER_BY)
LOGGING
/

ALTER TABLE RELEASE_SCRIPTS ADD (
  CONSTRAINT RELEASE_SCRIPTS_PK
  PRIMARY KEY
  (RELEASE_SCRIPT_ID)
  USING INDEX RELEASE_SCRIPTS_PK
  ENABLE VALIDATE
,  CONSTRAINT RSCR_UN
  UNIQUE (RELEASE_ID, ORDER_BY)
  USING INDEX RSCR_UN
  ENABLE VALIDATE)
/


--
-- RELEASE_SCRIPT_TYPES  (Table) 
--
CREATE TABLE RELEASE_SCRIPT_TYPES
(
  RLS_SCRIPT_TYPE_ID  NUMBER(10)                NOT NULL,
  CODE                VARCHAR2(20 CHAR)         NOT NULL,
  NAME                VARCHAR2(500 CHAR)        NOT NULL,
  TARGET_FOLDER       VARCHAR2(1000 CHAR)       NOT NULL,
  SEQ                 NUMBER(5)                 NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN RELEASE_SCRIPT_TYPES.RLS_SCRIPT_TYPE_ID IS 'PK'
/

COMMENT ON COLUMN RELEASE_SCRIPT_TYPES.CODE IS 'Release script type code'
/

COMMENT ON COLUMN RELEASE_SCRIPT_TYPES.NAME IS 'Release script type name'
/

COMMENT ON COLUMN RELEASE_SCRIPT_TYPES.TARGET_FOLDER IS 'Target folder'
/

COMMENT ON COLUMN RELEASE_SCRIPT_TYPES.SEQ IS 'Sequence in list of values'
/


--
-- RELEASE_SCRIPT_TYPES_PK  (Index) 
--
CREATE UNIQUE INDEX RELEASE_SCRIPT_TYPES_PK ON RELEASE_SCRIPT_TYPES
(RLS_SCRIPT_TYPE_ID)
LOGGING
/

ALTER TABLE RELEASE_SCRIPT_TYPES ADD (
  CONSTRAINT RELEASE_SCRIPT_TYPES_PK
  PRIMARY KEY
  (RLS_SCRIPT_TYPE_ID)
  USING INDEX RELEASE_SCRIPT_TYPES_PK
  ENABLE VALIDATE)
/


--
-- R_SETTINGS  (Table) 
--
CREATE TABLE R_SETTINGS
(
  SETTING_ID  NUMBER(10)                        NOT NULL,
  CODE        VARCHAR2(20 CHAR)                 NOT NULL,
  NAME        VARCHAR2(500 CHAR)                NOT NULL,
  HIDDEN_YN   VARCHAR2(1 CHAR)                  DEFAULT 'N'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN R_SETTINGS.SETTING_ID IS 'PK'
/

COMMENT ON COLUMN R_SETTINGS.CODE IS 'Setting code (used as reference in application code)'
/

COMMENT ON COLUMN R_SETTINGS.NAME IS 'Setting name (used in UI)'
/

COMMENT ON COLUMN R_SETTINGS.HIDDEN_YN IS 'Is setting hidden from direct editing on page 160'
/


--
-- R_SETTINGS_PK  (Index) 
--
CREATE UNIQUE INDEX R_SETTINGS_PK ON R_SETTINGS
(SETTING_ID)
LOGGING
/

ALTER TABLE R_SETTINGS ADD (
  CHECK ( hidden_yn IN ( 'N', 'Y' ) )
  ENABLE VALIDATE
,  CONSTRAINT R_SETTINGS_PK
  PRIMARY KEY
  (SETTING_ID)
  USING INDEX R_SETTINGS_PK
  ENABLE VALIDATE)
/


--
-- TASKS  (Table) 
--
CREATE TABLE TASKS
(
  TASK_ID        NUMBER(10)                     NOT NULL,
  TASK_GROUP_ID  NUMBER(10)                     NOT NULL,
  CODE           VARCHAR2(20 CHAR)              NOT NULL,
  NAME           VARCHAR2(500 CHAR)             NOT NULL,
  APP_USER_ID    NUMBER(10)                     NOT NULL,
  CREATED_ON     DATE                           DEFAULT sysdate               NOT NULL,
  FINISHED_YN    VARCHAR2(1 CHAR)               DEFAULT 'N'                   NOT NULL,
  FINISHED_ON    DATE,
  EXTERNAL_LINK  VARCHAR2(4000 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN TASKS.TASK_ID IS 'PK'
/

COMMENT ON COLUMN TASKS.TASK_GROUP_ID IS 'FK TASK_GROUPS'
/

COMMENT ON COLUMN TASKS.CODE IS 'Task code'
/

COMMENT ON COLUMN TASKS.NAME IS 'Task name'
/

COMMENT ON COLUMN TASKS.APP_USER_ID IS 'FK APP_USERS - user created task'
/

COMMENT ON COLUMN TASKS.CREATED_ON IS 'Task created on'
/

COMMENT ON COLUMN TASKS.FINISHED_YN IS 'Is task finished or not'
/

COMMENT ON COLUMN TASKS.FINISHED_ON IS 'When is the task finished'
/

COMMENT ON COLUMN TASKS.EXTERNAL_LINK IS 'Link which opens task in external system (for example Jira)'
/


--
-- TASKS_PK  (Index) 
--
CREATE UNIQUE INDEX TASKS_PK ON TASKS
(TASK_ID)
LOGGING
/

ALTER TABLE TASKS ADD (
  CHECK ( finished_yn IN ( 'N', 'Y' ) )
  ENABLE VALIDATE
,  CONSTRAINT TASKS_PK
  PRIMARY KEY
  (TASK_ID)
  USING INDEX TASKS_PK
  ENABLE VALIDATE)
/


--
-- TASK_GROUPS  (Table) 
--
CREATE TABLE TASK_GROUPS
(
  TASK_GROUP_ID  NUMBER(10)                     NOT NULL,
  CODE           VARCHAR2(20 CHAR)              NOT NULL,
  NAME           VARCHAR2(500 CHAR)             NOT NULL,
  PROJECT_ID     NUMBER(10)                     NOT NULL,
  ACTIVE_YN      VARCHAR2(1 BYTE)               DEFAULT 'Y'                   NOT NULL,
  HIDDEN_YN      VARCHAR2(1 BYTE)               DEFAULT 'N'                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN TASK_GROUPS.TASK_GROUP_ID IS 'PK'
/

COMMENT ON COLUMN TASK_GROUPS.CODE IS 'Task group code'
/

COMMENT ON COLUMN TASK_GROUPS.NAME IS 'Task group name'
/

COMMENT ON COLUMN TASK_GROUPS.PROJECT_ID IS 'FK PROJECTS'
/

COMMENT ON COLUMN TASK_GROUPS.ACTIVE_YN IS 'Task group active or not (user for creating new tasks)'
/

COMMENT ON COLUMN TASK_GROUPS.HIDDEN_YN IS 'If task group is used for testing or educational purposes and it''s tasks are no longer needed on reports'
/


--
-- TASK_GROUPS_PK  (Index) 
--
CREATE UNIQUE INDEX TASK_GROUPS_PK ON TASK_GROUPS
(TASK_GROUP_ID)
LOGGING
/

ALTER TABLE TASK_GROUPS ADD (
  CHECK ( hidden_yn IN ( 'N', 'Y' ) )
  ENABLE VALIDATE
,  CHECK ( active_yn IN ( 'N', 'Y' ) )
  ENABLE VALIDATE
,  CONSTRAINT TASK_GROUPS_PK
  PRIMARY KEY
  (TASK_GROUP_ID)
  USING INDEX TASK_GROUPS_PK
  ENABLE VALIDATE)
/


--
-- USER_WORKS_ON_PATCH  (Table) 
--
CREATE TABLE USER_WORKS_ON_PATCH
(
  UWOP_ID      NUMBER(10)                       NOT NULL,
  APP_USER_ID  NUMBER(10)                       NOT NULL,
  PATCH_ID     NUMBER(10)                       NOT NULL,
  "START"      DATE                             DEFAULT sysdate               NOT NULL,
  STOP         DATE
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN USER_WORKS_ON_PATCH.UWOP_ID IS 'PK'
/

COMMENT ON COLUMN USER_WORKS_ON_PATCH.APP_USER_ID IS 'FK USERS'
/

COMMENT ON COLUMN USER_WORKS_ON_PATCH.PATCH_ID IS 'FK PATCHES'
/

COMMENT ON COLUMN USER_WORKS_ON_PATCH."START" IS 'Date and time when user starts to work on patch'
/

COMMENT ON COLUMN USER_WORKS_ON_PATCH.STOP IS 'Date and time when user stops to work on patch (null means he still works on patch)'
/


--
-- USER_WORKS_ON_PATCH_PK  (Index) 
--
CREATE UNIQUE INDEX USER_WORKS_ON_PATCH_PK ON USER_WORKS_ON_PATCH
(UWOP_ID)
LOGGING
/

ALTER TABLE USER_WORKS_ON_PATCH ADD (
  CONSTRAINT USER_WORKS_ON_PATCH_PK
  PRIMARY KEY
  (UWOP_ID)
  USING INDEX USER_WORKS_ON_PATCH_PK
  ENABLE VALIDATE)
/


--
-- WORKSPACE_USERS  (Table) 
--
CREATE TABLE WORKSPACE_USERS
(
  WORKSPACE_USER_ID  NUMBER(10)                 NOT NULL,
  APEX_USER_NAME     VARCHAR2(128 CHAR)         NOT NULL,
  WORKSPACE_ID       NUMBER(10)                 NOT NULL,
  APP_USER_ID        NUMBER(10)                 NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN WORKSPACE_USERS.WORKSPACE_USER_ID IS 'PK'
/

COMMENT ON COLUMN WORKSPACE_USERS.APEX_USER_NAME IS 'Username for APEX workspace'
/

COMMENT ON COLUMN WORKSPACE_USERS.WORKSPACE_ID IS 'FK OBJECTS'
/

COMMENT ON COLUMN WORKSPACE_USERS.APP_USER_ID IS 'FK APP_USERS'
/


--
-- WORKSPACE_USERS_PK  (Index) 
--
CREATE UNIQUE INDEX WORKSPACE_USERS_PK ON WORKSPACE_USERS
(WORKSPACE_USER_ID)
LOGGING
/

ALTER TABLE WORKSPACE_USERS ADD (
  CONSTRAINT WORKSPACE_USERS_PK
  PRIMARY KEY
  (WORKSPACE_USER_ID)
  USING INDEX WORKSPACE_USERS_PK
  ENABLE VALIDATE)
/


--
-- WRAP_OBJECT_SOURCES  (Table) 
--
CREATE TABLE WRAP_OBJECT_SOURCES
(
  WRAP_OBJECT_SOURCE_ID  NUMBER(10)             NOT NULL,
  OBJECT_ID              NUMBER(10)             NOT NULL,
  PROJECT_ID             NUMBER(10)             NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN WRAP_OBJECT_SOURCES.WRAP_OBJECT_SOURCE_ID IS 'PK'
/

COMMENT ON COLUMN WRAP_OBJECT_SOURCES.OBJECT_ID IS 'FK OBJECTS'
/

COMMENT ON COLUMN WRAP_OBJECT_SOURCES.PROJECT_ID IS 'FK PROJECTS'
/


--
-- WRAP_OBJECT_SOURCES_PK  (Index) 
--
CREATE UNIQUE INDEX WRAP_OBJECT_SOURCES_PK ON WRAP_OBJECT_SOURCES
(WRAP_OBJECT_SOURCE_ID)
LOGGING
/
--
-- WROBSRC_UN  (Index) 
--
CREATE UNIQUE INDEX WROBSRC_UN ON WRAP_OBJECT_SOURCES
(OBJECT_ID, PROJECT_ID)
LOGGING
/

ALTER TABLE WRAP_OBJECT_SOURCES ADD (
  CONSTRAINT WRAP_OBJECT_SOURCES_PK
  PRIMARY KEY
  (WRAP_OBJECT_SOURCE_ID)
  USING INDEX WRAP_OBJECT_SOURCES_PK
  ENABLE VALIDATE
,  CONSTRAINT WROBSRC_UN
  UNIQUE (OBJECT_ID, PROJECT_ID)
  USING INDEX WROBSRC_UN
  ENABLE VALIDATE)
/


--
-- WRAP_OBJECT_TYPES  (Table) 
--
CREATE TABLE WRAP_OBJECT_TYPES
(
  WRAP_OBJECT_TYPE_ID  NUMBER(10)               NOT NULL,
  OBJECT_TYPE_ID       NUMBER(10)               NOT NULL,
  PROJECT_ID           NUMBER(10)               NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
/

COMMENT ON COLUMN WRAP_OBJECT_TYPES.WRAP_OBJECT_TYPE_ID IS 'PK'
/

COMMENT ON COLUMN WRAP_OBJECT_TYPES.OBJECT_TYPE_ID IS 'FK OBJECT_TYPES'
/

COMMENT ON COLUMN WRAP_OBJECT_TYPES.PROJECT_ID IS 'FK PROJECTS'
/


--
-- WROBJTYP_UN  (Index) 
--
CREATE UNIQUE INDEX WROBJTYP_UN ON WRAP_OBJECT_TYPES
(OBJECT_TYPE_ID, PROJECT_ID)
LOGGING
/

ALTER TABLE WRAP_OBJECT_TYPES ADD (
  CONSTRAINT WROBJTYP_UN
  UNIQUE (OBJECT_TYPE_ID, PROJECT_ID)
  USING INDEX WROBJTYP_UN
  ENABLE VALIDATE)
/


--
-- APUSRPRJ_APP_USER_ID_IDX  (Index) 
--
CREATE INDEX APUSRPRJ_APP_USER_ID_IDX ON APP_USER_PROJECTS
(APP_USER_ID)
LOGGING
/

--
-- APUSRPRJ_PROJECT_ID_IDX  (Index) 
--
CREATE INDEX APUSRPRJ_PROJECT_ID_IDX ON APP_USER_PROJECTS
(PROJECT_ID)
LOGGING
/

--
-- ENV_PROJECT_ID_IDX  (Index) 
--
CREATE INDEX ENV_PROJECT_ID_IDX ON ENVIRONMENTS
(PROJECT_ID)
LOGGING
/

--
-- EXCLREC__IDXV1  (Index) 
--
CREATE INDEX EXCLREC__IDXV1 ON EXCLUDE_FROM_RECORDING
(PROJECT_ID)
LOGGING
/

--
-- EXCLREC__IDXV2  (Index) 
--
CREATE INDEX EXCLREC__IDXV2 ON EXCLUDE_FROM_RECORDING
(DB_SCHEMA_ID)
LOGGING
/

--
-- EXCLREC__IDXV3  (Index) 
--
CREATE INDEX EXCLREC__IDXV3 ON EXCLUDE_FROM_RECORDING
(OBJECT_TYPE_ID)
LOGGING
/

--
-- LNKPATCH_PATCH1_ID_IDX  (Index) 
--
CREATE INDEX LNKPATCH_PATCH1_ID_IDX ON LINKED_PATCHES
(PATCH1_ID)
LOGGING
/

--
-- LNKPATCH_PATCH2_ID_IDX  (Index) 
--
CREATE INDEX LNKPATCH_PATCH2_ID_IDX ON LINKED_PATCHES
(PATCH2_ID)
LOGGING
/

--
-- OBJTYP_RECORD_AS_OBJ_T_IDX  (Index) 
--
CREATE INDEX OBJTYP_RECORD_AS_OBJ_T_IDX ON OBJECT_TYPES
(RECORD_AS_OBJECT_TYPE_ID)
LOGGING
/

--
-- OBJ_AA_NUMBER_01_IDX  (Index) 
--
CREATE INDEX OBJ_AA_NUMBER_01_IDX ON OBJECTS
(AA_NUMBER_01)
LOGGING
/

--
-- OBJ_LOCK_APP_USER_ID_IDX  (Index) 
--
CREATE INDEX OBJ_LOCK_APP_USER_ID_IDX ON OBJECTS
(LOCK_APP_USER_ID)
LOGGING
/

--
-- OBJ_OBJECT_TYPE_ID_IDX  (Index) 
--
CREATE INDEX OBJ_OBJECT_TYPE_ID_IDX ON OBJECTS
(OBJECT_TYPE_ID)
LOGGING
/

--
-- OBJ_PARENT_OBJECT_ID_IDX  (Index) 
--
CREATE INDEX OBJ_PARENT_OBJECT_ID_IDX ON OBJECTS
(PARENT_OBJECT_ID)
LOGGING
/

--
-- PDS_DATABASE_SCHEMA_ID_IDX  (Index) 
--
CREATE INDEX PDS_DATABASE_SCHEMA_ID_IDX ON PROJECT_DATABASE_SCHEMAS
(OBJECT_ID)
LOGGING
/

--
-- PDS_PROJECT_ID_IDX  (Index) 
--
CREATE INDEX PDS_PROJECT_ID_IDX ON PROJECT_DATABASE_SCHEMAS
(PROJECT_ID)
LOGGING
/

--
-- PRJAPXAPP_APEX_APP_ID_IDX  (Index) 
--
CREATE INDEX PRJAPXAPP_APEX_APP_ID_IDX ON PROJECT_APPS
(OBJECT_ID)
LOGGING
/

--
-- PRJAPXAPP_PROJECT_ID_IDX  (Index) 
--
CREATE INDEX PRJAPXAPP_PROJECT_ID_IDX ON PROJECT_APPS
(PROJECT_ID)
LOGGING
/

--
-- PRSET_PROJECT_ID_IDX  (Index) 
--
CREATE INDEX PRSET_PROJECT_ID_IDX ON PROJECT_SETTINGS
(PROJECT_ID)
LOGGING
/

--
-- PRSET_SETTING_ID_IDX  (Index) 
--
CREATE INDEX PRSET_SETTING_ID_IDX ON PROJECT_SETTINGS
(SETTING_ID)
LOGGING
/

--
-- PSCR_APP_USER_ID_IDX  (Index) 
--
CREATE INDEX PSCR_APP_USER_ID_IDX ON PATCH_SCRIPTS
(APP_USER_ID)
LOGGING
/

--
-- PSCR_DATABASE_SCHEMA_ID_IDX  (Index) 
--
CREATE INDEX PSCR_DATABASE_SCHEMA_ID_IDX ON PATCH_SCRIPTS
(DATABASE_SCHEMA_ID)
LOGGING
/

--
-- PSCR_OBJECT_TYPE_ID_IDX  (Index) 
--
CREATE INDEX PSCR_OBJECT_TYPE_ID_IDX ON PATCH_SCRIPTS
(OBJECT_TYPE_ID)
LOGGING
/

--
-- PSCR_PATCH_ID_IDX  (Index) 
--
CREATE INDEX PSCR_PATCH_ID_IDX ON PATCH_SCRIPTS
(PATCH_ID)
LOGGING
/

--
-- PSCR_PATCH_SCRIPT_TYPE_ID_IDX  (Index) 
--
CREATE INDEX PSCR_PATCH_SCRIPT_TYPE_ID_IDX ON PATCH_SCRIPTS
(PATCH_SCRIPT_TYPE_ID)
LOGGING
/

--
-- PTCHDISAPP_OBJECT_ID_IDX  (Index) 
--
CREATE INDEX PTCHDISAPP_OBJECT_ID_IDX ON PATCH_DISABLE_APPS
(APPLICATION_ID)
LOGGING
/

--
-- PTCHDISAPP_PATCH_ID_IDX  (Index) 
--
CREATE INDEX PTCHDISAPP_PATCH_ID_IDX ON PATCH_DISABLE_APPS
(PATCH_ID)
LOGGING
/

--
-- PTCHINST_ENVIRONMENT_ID_IDX  (Index) 
--
CREATE INDEX PTCHINST_ENVIRONMENT_ID_IDX ON PATCH_INSTALLS
(ENVIRONMENT_ID)
LOGGING
/

--
-- PTCHINST_PATCH_ID_IDX  (Index) 
--
CREATE INDEX PTCHINST_PATCH_ID_IDX ON PATCH_INSTALLS
(PATCH_ID)
LOGGING
/

--
-- PTCHOBJ_ADDED_BY_USER_ID_IDX  (Index) 
--
CREATE INDEX PTCHOBJ_ADDED_BY_USER_ID_IDX ON PATCH_OBJECTS
(APP_USER_ID)
LOGGING
/

--
-- PTCHOBJ_OBJECT_ID_IDX  (Index) 
--
CREATE INDEX PTCHOBJ_OBJECT_ID_IDX ON PATCH_OBJECTS
(OBJECT_ID)
LOGGING
/

--
-- PTCHOBJ_PATCH_ID_IDX  (Index) 
--
CREATE INDEX PTCHOBJ_PATCH_ID_IDX ON PATCH_OBJECTS
(PATCH_ID)
LOGGING
/

--
-- PTCHOTF_OBJECT_TYPE_ID_IDX  (Index) 
--
CREATE INDEX PTCHOTF_OBJECT_TYPE_ID_IDX ON PATCH_OBJ_TYPE_FOLDERS
(OBJECT_TYPE_ID)
LOGGING
/

--
-- PTCHOTF_PATCH_TEMPLATE_ID_IDX  (Index) 
--
CREATE INDEX PTCHOTF_PATCH_TEMPLATE_ID_IDX ON PATCH_OBJ_TYPE_FOLDERS
(PATCH_TEMPLATE_ID)
LOGGING
/

--
-- PTCHTMPFL_PATCH_TEMPL_ID_IDX  (Index) 
--
CREATE INDEX PTCHTMPFL_PATCH_TEMPL_ID_IDX ON PATCH_TEMPLATE_FILES
(PATCH_TEMPLATE_ID)
LOGGING
/

--
-- PTCH_CREATED_APP_USER_ID_IDX  (Index) 
--
CREATE INDEX PTCH_CREATED_APP_USER_ID_IDX ON PATCHES
(CREATED_APP_USER_ID)
LOGGING
/

--
-- PTCH_OWNER_APP_USER_ID_IDX  (Index) 
--
CREATE INDEX PTCH_OWNER_APP_USER_ID_IDX ON PATCHES
(OWNER_APP_USER_ID)
LOGGING
/

--
-- PTCH_RELEASE_ID_IDX  (Index) 
--
CREATE INDEX PTCH_RELEASE_ID_IDX ON PATCHES
(RELEASE_ID)
LOGGING
/

--
-- PTCH_TASK_ID_IDX  (Index) 
--
CREATE INDEX PTCH_TASK_ID_IDX ON PATCHES
(TASK_ID)
LOGGING
/

--
-- RELDPTXT_FK_I01  (Index) 
--
CREATE INDEX RELDPTXT_FK_I01 ON RELEASE_DOC_PART_TXT
(RELEASE_DOC_PART_ID)
LOGGING
/

--
-- RELDPTXT_FK_I02  (Index) 
--
CREATE INDEX RELDPTXT_FK_I02 ON RELEASE_DOC_PART_TXT
(RELEASE_ID)
LOGGING
/

--
-- RELDP_PROJECT_ID_IDX  (Index) 
--
CREATE INDEX RELDP_PROJECT_ID_IDX ON RELEASE_DOC_PARTS
(PROJECT_ID)
LOGGING
/

--
-- RLS_CREATED_APP_USER_ID_IDX  (Index) 
--
CREATE INDEX RLS_CREATED_APP_USER_ID_IDX ON RELEASES
(CREATED_APP_USER_ID)
LOGGING
/

--
-- RLS_PROJECT_ID_IDX  (Index) 
--
CREATE INDEX RLS_PROJECT_ID_IDX ON RELEASES
(PROJECT_ID)
LOGGING
/

--
-- RSCR_DATABASE_SCHEMA_ID_IDX  (Index) 
--
CREATE INDEX RSCR_DATABASE_SCHEMA_ID_IDX ON RELEASE_SCRIPTS
(DATABASE_SCHEMA_ID)
LOGGING
/

--
-- RSCR_RELEASE_ID_IDX  (Index) 
--
CREATE INDEX RSCR_RELEASE_ID_IDX ON RELEASE_SCRIPTS
(RELEASE_ID)
LOGGING
/

--
-- RSCR_RLS_SCRIPT_TYPE_ID_IDX  (Index) 
--
CREATE INDEX RSCR_RLS_SCRIPT_TYPE_ID_IDX ON RELEASE_SCRIPTS
(RLS_SCRIPT_TYPE_ID)
LOGGING
/

--  Index PME."SYS_AI_02dy1u6rwk28z" was created automatically by DBMS_AUTO_INDEX.
--  

--  Index PME."SYS_AI_3w3vb7tfvn9fs" was created automatically by DBMS_AUTO_INDEX.
--  

--  Index PME."SYS_AI_ahmc7u4ucuvyu" was created automatically by DBMS_AUTO_INDEX.
--  

--  Index PME."SYS_AI_bynmaj9f8bwz2" was created automatically by DBMS_AUTO_INDEX.
--  

--  Index PME."SYS_AI_c5u2pxkcm43qx" was created automatically by DBMS_AUTO_INDEX.
--  

--  Index PME."SYS_AI_dqwm02d3bjq3g" was created automatically by DBMS_AUTO_INDEX.
--  

--  Index PME."SYS_AI_dx9uqjm1pjpv9" was created automatically by DBMS_AUTO_INDEX.
--  

--  Index PME."SYS_AI_fxusdnk7cdy38" was created automatically by DBMS_AUTO_INDEX.
--  

--  Index PME."SYS_AI_ghag29dy71hb3" was created automatically by DBMS_AUTO_INDEX.
--  

--
-- TRG_PROJECT_ID_IDX  (Index) 
--
CREATE INDEX TRG_PROJECT_ID_IDX ON TASK_GROUPS
(PROJECT_ID)
LOGGING
/

--
-- TSK_TASK_GROUP_ID_IDX  (Index) 
--
CREATE INDEX TSK_TASK_GROUP_ID_IDX ON TASKS
(TASK_GROUP_ID)
LOGGING
/

--
-- UWOP_PATCH_ID_IDX  (Index) 
--
CREATE INDEX UWOP_PATCH_ID_IDX ON USER_WORKS_ON_PATCH
(PATCH_ID)
LOGGING
/

--
-- UWOP_USER_ID_IDX  (Index) 
--
CREATE INDEX UWOP_USER_ID_IDX ON USER_WORKS_ON_PATCH
(APP_USER_ID)
LOGGING
/

--
-- WROBJTYP_OBJECT_TYPE_ID_IDX  (Index) 
--
CREATE INDEX WROBJTYP_OBJECT_TYPE_ID_IDX ON WRAP_OBJECT_TYPES
(OBJECT_TYPE_ID)
LOGGING
/

--
-- WROBJTYP_PROJECT_ID_IDX  (Index) 
--
CREATE INDEX WROBJTYP_PROJECT_ID_IDX ON WRAP_OBJECT_TYPES
(PROJECT_ID)
LOGGING
/

--
-- WROBSRC_OBJECT_ID_IDX  (Index) 
--
CREATE INDEX WROBSRC_OBJECT_ID_IDX ON WRAP_OBJECT_SOURCES
(OBJECT_ID)
LOGGING
/

--
-- WROBSRC_PROJECT_ID_IDX  (Index) 
--
CREATE INDEX WROBSRC_PROJECT_ID_IDX ON WRAP_OBJECT_SOURCES
(PROJECT_ID)
LOGGING
/

--
-- WSPUS_APP_USER_ID_IDX  (Index) 
--
CREATE INDEX WSPUS_APP_USER_ID_IDX ON WORKSPACE_USERS
(APP_USER_ID)
LOGGING
/

--
-- WSPUS_WORKSPACE_ID_IDX  (Index) 
--
CREATE INDEX WSPUS_WORKSPACE_ID_IDX ON WORKSPACE_USERS
(WORKSPACE_ID)
LOGGING
/

ALTER TABLE APP_USER_PROJECTS ADD (
  CONSTRAINT APUSRPRJ_PRJ_FK 
  FOREIGN KEY (PROJECT_ID) 
  REFERENCES PROJECTS (PROJECT_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE
,  CONSTRAINT APUSRPRJ_USR_FK 
  FOREIGN KEY (APP_USER_ID) 
  REFERENCES APP_USERS (APP_USER_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE)
/

ALTER TABLE ENVIRONMENTS ADD (
  CONSTRAINT ENV_PRJ_FK 
  FOREIGN KEY (PROJECT_ID) 
  REFERENCES PROJECTS (PROJECT_ID)
  ENABLE VALIDATE)
/

ALTER TABLE EXCLUDE_FROM_RECORDING ADD (
  CONSTRAINT EXCLREC_OBJTYP_FK 
  FOREIGN KEY (OBJECT_TYPE_ID) 
  REFERENCES OBJECT_TYPES (OBJECT_TYPE_ID)
  ENABLE VALIDATE
,  CONSTRAINT EXCLREC_OBJ_FK 
  FOREIGN KEY (DB_SCHEMA_ID) 
  REFERENCES OBJECTS (OBJECT_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE
,  CONSTRAINT EXCLREC_PRJ_FK 
  FOREIGN KEY (PROJECT_ID) 
  REFERENCES PROJECTS (PROJECT_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE)
/

ALTER TABLE LINKED_PATCHES ADD (
  CONSTRAINT LNKPATCH_PTCH_FK 
  FOREIGN KEY (PATCH1_ID) 
  REFERENCES PATCHES (PATCH_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE
,  CONSTRAINT LNKPATCH_PTCH_FKV2 
  FOREIGN KEY (PATCH2_ID) 
  REFERENCES PATCHES (PATCH_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE)
/

ALTER TABLE OBJECTS ADD (
  CONSTRAINT OBJ_OBJTYP_FK 
  FOREIGN KEY (OBJECT_TYPE_ID) 
  REFERENCES OBJECT_TYPES (OBJECT_TYPE_ID)
  ENABLE VALIDATE
,  CONSTRAINT OBJ_OBJ_FK 
  FOREIGN KEY (PARENT_OBJECT_ID) 
  REFERENCES OBJECTS (OBJECT_ID)
  ENABLE VALIDATE
,  CONSTRAINT OBJ_USR_FK 
  FOREIGN KEY (LOCK_APP_USER_ID) 
  REFERENCES APP_USERS (APP_USER_ID)
  ENABLE VALIDATE)
/

ALTER TABLE OBJECT_TYPES ADD (
  CONSTRAINT OBJTYP_OBJTYP_FK 
  FOREIGN KEY (RECORD_AS_OBJECT_TYPE_ID) 
  REFERENCES OBJECT_TYPES (OBJECT_TYPE_ID)
  ENABLE VALIDATE)
/

ALTER TABLE PATCHES ADD (
  CONSTRAINT PTCH_RLS_FK 
  FOREIGN KEY (RELEASE_ID) 
  REFERENCES RELEASES (RELEASE_ID)
  ON DELETE SET NULL
  ENABLE VALIDATE
,  CONSTRAINT PTCH_TSK_FK 
  FOREIGN KEY (TASK_ID) 
  REFERENCES TASKS (TASK_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE
,  CONSTRAINT PTCH_USR_FK 
  FOREIGN KEY (CREATED_APP_USER_ID) 
  REFERENCES APP_USERS (APP_USER_ID)
  ENABLE VALIDATE
,  CONSTRAINT PTCH_USR_FKV2 
  FOREIGN KEY (CONFIRMED_APP_USER_ID) 
  REFERENCES APP_USERS (APP_USER_ID)
  ENABLE VALIDATE
,  CONSTRAINT PTCH_USR_FKV3 
  FOREIGN KEY (OWNER_APP_USER_ID) 
  REFERENCES APP_USERS (APP_USER_ID)
  ENABLE VALIDATE)
/

ALTER TABLE PATCH_DISABLE_APPS ADD (
  CONSTRAINT PTCHDISAPP_OBJ_FK 
  FOREIGN KEY (APPLICATION_ID) 
  REFERENCES OBJECTS (OBJECT_ID)
  ENABLE VALIDATE
,  CONSTRAINT PTCHDISAPP_PTCH_FK 
  FOREIGN KEY (PATCH_ID) 
  REFERENCES PATCHES (PATCH_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE)
/

ALTER TABLE PATCH_INSTALLS ADD (
  CONSTRAINT PTCHINST_ENV_FK 
  FOREIGN KEY (ENVIRONMENT_ID) 
  REFERENCES ENVIRONMENTS (ENVIRONMENT_ID)
  ENABLE VALIDATE
,  CONSTRAINT PTCHINST_PTCH_FK 
  FOREIGN KEY (PATCH_ID) 
  REFERENCES PATCHES (PATCH_ID)
  ENABLE VALIDATE)
/

ALTER TABLE PATCH_OBJECTS ADD (
  CONSTRAINT PTCHOBJ_OBJ_FK 
  FOREIGN KEY (OBJECT_ID) 
  REFERENCES OBJECTS (OBJECT_ID)
  ENABLE VALIDATE
,  CONSTRAINT PTCHOBJ_PTCH_FK 
  FOREIGN KEY (PATCH_ID) 
  REFERENCES PATCHES (PATCH_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE
,  CONSTRAINT PTCHOBJ_USR_FK 
  FOREIGN KEY (APP_USER_ID) 
  REFERENCES APP_USERS (APP_USER_ID)
  ENABLE VALIDATE)
/

ALTER TABLE PATCH_OBJ_TYPE_FOLDERS ADD (
  CONSTRAINT PTCHOTF_OBJTYP_FK 
  FOREIGN KEY (OBJECT_TYPE_ID) 
  REFERENCES OBJECT_TYPES (OBJECT_TYPE_ID)
  ENABLE VALIDATE
,  CONSTRAINT PTCHOTF_PTCHTMPL_FK 
  FOREIGN KEY (PATCH_TEMPLATE_ID) 
  REFERENCES PATCH_TEMPLATES (PATCH_TEMPLATE_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE)
/

ALTER TABLE PATCH_SCRIPTS ADD (
  CONSTRAINT PSCR_OBJTYP_FK 
  FOREIGN KEY (OBJECT_TYPE_ID) 
  REFERENCES OBJECT_TYPES (OBJECT_TYPE_ID)
  ENABLE VALIDATE
,  CONSTRAINT PSCR_OBJ_FK 
  FOREIGN KEY (DATABASE_SCHEMA_ID) 
  REFERENCES OBJECTS (OBJECT_ID)
  ENABLE VALIDATE
,  CONSTRAINT PSCR_PTCHSTYPE_FK 
  FOREIGN KEY (PATCH_SCRIPT_TYPE_ID) 
  REFERENCES PATCH_SCRIPT_TYPES (PATCH_SCRIPT_TYPE_ID)
  ENABLE VALIDATE
,  CONSTRAINT PSCR_PTCH_FK 
  FOREIGN KEY (PATCH_ID) 
  REFERENCES PATCHES (PATCH_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE
,  CONSTRAINT PSCR_USR_FK 
  FOREIGN KEY (APP_USER_ID) 
  REFERENCES APP_USERS (APP_USER_ID)
  ENABLE VALIDATE)
/

ALTER TABLE PATCH_TEMPLATE_FILES ADD (
  CONSTRAINT PTCHTMPFL_PTCHTMPL_FK 
  FOREIGN KEY (PATCH_TEMPLATE_ID) 
  REFERENCES PATCH_TEMPLATES (PATCH_TEMPLATE_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE)
/

ALTER TABLE PROJECT_APPS ADD (
  CONSTRAINT PRJAPP_OBJ_FK 
  FOREIGN KEY (OBJECT_ID) 
  REFERENCES OBJECTS (OBJECT_ID)
  ENABLE VALIDATE
,  CONSTRAINT PRJAPP_PRJ_FK 
  FOREIGN KEY (PROJECT_ID) 
  REFERENCES PROJECTS (PROJECT_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE)
/

ALTER TABLE PROJECT_DATABASE_SCHEMAS ADD (
  CONSTRAINT PDS_OBJ_FK 
  FOREIGN KEY (OBJECT_ID) 
  REFERENCES OBJECTS (OBJECT_ID)
  ENABLE VALIDATE
,  CONSTRAINT PDS_PRJ_FK 
  FOREIGN KEY (PROJECT_ID) 
  REFERENCES PROJECTS (PROJECT_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE)
/

ALTER TABLE PROJECT_SETTINGS ADD (
  CONSTRAINT PRSET_PRJ_FK 
  FOREIGN KEY (PROJECT_ID) 
  REFERENCES PROJECTS (PROJECT_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE
,  CONSTRAINT PRSET_RSETT_FK 
  FOREIGN KEY (SETTING_ID) 
  REFERENCES R_SETTINGS (SETTING_ID)
  ENABLE VALIDATE)
/

ALTER TABLE RELEASES ADD (
  CONSTRAINT RLS_PRJ_FK 
  FOREIGN KEY (PROJECT_ID) 
  REFERENCES PROJECTS (PROJECT_ID)
  ENABLE VALIDATE
,  CONSTRAINT RLS_USR_FK 
  FOREIGN KEY (CREATED_APP_USER_ID) 
  REFERENCES APP_USERS (APP_USER_ID)
  ENABLE VALIDATE)
/

ALTER TABLE RELEASE_DOC_PARTS ADD (
  CONSTRAINT RELDP_PRJ_FK 
  FOREIGN KEY (PROJECT_ID) 
  REFERENCES PROJECTS (PROJECT_ID)
  ENABLE VALIDATE)
/

ALTER TABLE RELEASE_DOC_PART_TXT ADD (
  CONSTRAINT RELDPTXT_RELDP_FK 
  FOREIGN KEY (RELEASE_DOC_PART_ID) 
  REFERENCES RELEASE_DOC_PARTS (RELEASE_DOC_PART_ID)
  ENABLE VALIDATE
,  CONSTRAINT RELDPTXT_RLS_FK 
  FOREIGN KEY (RELEASE_ID) 
  REFERENCES RELEASES (RELEASE_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE)
/

ALTER TABLE RELEASE_SCRIPTS ADD (
  CONSTRAINT RSCR_OBJ_FK 
  FOREIGN KEY (DATABASE_SCHEMA_ID) 
  REFERENCES OBJECTS (OBJECT_ID)
  ENABLE VALIDATE
,  CONSTRAINT RSCR_RLSSTYPE_FK 
  FOREIGN KEY (RLS_SCRIPT_TYPE_ID) 
  REFERENCES RELEASE_SCRIPT_TYPES (RLS_SCRIPT_TYPE_ID)
  ENABLE VALIDATE
,  CONSTRAINT RSCR_RLS_FK 
  FOREIGN KEY (RELEASE_ID) 
  REFERENCES RELEASES (RELEASE_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE)
/

ALTER TABLE TASKS ADD (
  CONSTRAINT TSK_TRG_FK 
  FOREIGN KEY (TASK_GROUP_ID) 
  REFERENCES TASK_GROUPS (TASK_GROUP_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE
,  CONSTRAINT TSK_USR_FK 
  FOREIGN KEY (APP_USER_ID) 
  REFERENCES APP_USERS (APP_USER_ID)
  ENABLE VALIDATE)
/

ALTER TABLE TASK_GROUPS ADD (
  CONSTRAINT TRG_PRJ_FK 
  FOREIGN KEY (PROJECT_ID) 
  REFERENCES PROJECTS (PROJECT_ID)
  ENABLE VALIDATE)
/

ALTER TABLE USER_WORKS_ON_PATCH ADD (
  CONSTRAINT UWOP_PTCH_FK 
  FOREIGN KEY (PATCH_ID) 
  REFERENCES PATCHES (PATCH_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE
,  CONSTRAINT UWOP_USR_FK 
  FOREIGN KEY (APP_USER_ID) 
  REFERENCES APP_USERS (APP_USER_ID)
  ENABLE VALIDATE)
/

ALTER TABLE WORKSPACE_USERS ADD (
  CONSTRAINT WSPUS_OBJ_FK 
  FOREIGN KEY (WORKSPACE_ID) 
  REFERENCES OBJECTS (OBJECT_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE
,  CONSTRAINT WSPUS_USR_FK 
  FOREIGN KEY (APP_USER_ID) 
  REFERENCES APP_USERS (APP_USER_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE)
/

ALTER TABLE WRAP_OBJECT_SOURCES ADD (
  CONSTRAINT WROBSRC_OBJ_FK 
  FOREIGN KEY (OBJECT_ID) 
  REFERENCES OBJECTS (OBJECT_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE
,  CONSTRAINT WROBSRC_PRJ_FK 
  FOREIGN KEY (PROJECT_ID) 
  REFERENCES PROJECTS (PROJECT_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE)
/

ALTER TABLE WRAP_OBJECT_TYPES ADD (
  CONSTRAINT WROBJTYP_OBJTYP_FK 
  FOREIGN KEY (OBJECT_TYPE_ID) 
  REFERENCES OBJECT_TYPES (OBJECT_TYPE_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE
,  CONSTRAINT WROBJTYP_PRJ_FK 
  FOREIGN KEY (PROJECT_ID) 
  REFERENCES PROJECTS (PROJECT_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE)
/
